#! /usr/bin/env python
import os
import re
import sys
import time

# find the path to xia-core
XIADIR=os.getcwd()
while os.path.split(XIADIR)[1] != 'xia-core':
    XIADIR=os.path.split(XIADIR)[0]
sys.path.append(XIADIR + '/api/lib')

from c_xsocket import *
import socket

ipv6_list = []

def getipv6():
	text = open('index.html').readlines()
	for x in text:
		if x[:6] == "aaaa::":
			count = -1
			for y in x:
				count = count + 1
				if y == "/":
					ipv6_list.append(x[:count])					
		elif x[17:23]  == "aaaa::":
			for y in range(2, len(x)):
				if x[y] == "/":
					ipv6_list.append(x[17:y])


def main():
	if len(sys.argv) != 5:
		usage()
	else:
		gateway()

def usage():
    sys.stdout = sys.stderr
    print 'Usage: xia-udp-gateway mote gateway gatewayrouter timeout'
    sys.exit(2)    

def gateway():	
	getipv6()
	UDP_IP = ipv6_list[int(sys.argv[1])-1]
	print UDP_IP
	NAME = sys.argv[1]+"."+sys.argv[2]+"."+sys.argv[3]
	
	UDP_PORT = 3000	
	MAXLEN = 120	
	TIMEOUT = int(sys.argv[4]) # seconds
	try:
		SID = XmakeNewSID()
		sock = Xsocket(XSOCK_DGRAM)
		address = open('./localdag').read()	
		ad =  re.findall(r'AD:[0-9A-F]+', address, re.I)	
		hid =  re.findall(r'HID:[0-9A-F]+', address, re.I)	
		dag = "RE %s %s %s" % (ad[0],hid[0],SID) 
		XregisterName(NAME, dag)
		Xbind(sock, dag)
		while (1):
			print "waiting for xdp-data"
			(data, cdag) = Xrecvfrom(sock, MAXLEN, 0)			 			
			print "received", len(data), "bytes from", cdag,":", data   
			udpsock = socket.socket(socket.AF_INET6, socket.SOCK_DGRAM) # UDP
   			udpsock.settimeout(TIMEOUT)
    			udpsock.sendto(data, (UDP_IP, UDP_PORT))
    			print "waiting for udp-data"
    			latency = time.time() * 1000
    			try:			
        			data, addr = udpsock.recvfrom(120)	
        			latency = (time.time() * 1000) - latency	
				print "received", len(data), "bytes from", addr, ":", data     
				print "latency: %d ms" % latency					
			except socket.timeout:	
				data = "udp-timeout"
				print "udp-timeout"
			Xsendto(sock, data, 0, cdag)
		Xclose(sock)
		XremoveSID(SID)	
	except:
		print "Xsocket error"
		        
main()

