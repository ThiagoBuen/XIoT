#!/usr/bin/python
import sys
import os
import time

import csv
import string
import random

# find the path to xia-core
XIADIR=os.getcwd()
while os.path.split(XIADIR)[1] != 'xia-core':
    XIADIR=os.path.split(XIADIR)[0]
sys.path.append(XIADIR + '/api/lib')

from c_xsocket import *

MAXLEN = 120

def main():
	if len(sys.argv) != 8:
		usage()
	else:
		echotester()

def usage():
    sys.stdout = sys.stderr
    print 'Usage: xia-echo-tester client clientrouter motes gateways gatewayrouters datasize requests'
    sys.exit(2) 

def echotester():
	SRC_CLIENT = int(sys.argv[1])
	SRC_CLIENTROUTER = int(sys.argv[2])	
	MOTES = int(sys.argv[3])	
	GATEWAYS = int(sys.argv[4])
	GATEWAYROUTERS = int(sys.argv[5])
	DATASIZE = int(sys.argv[6])	
	REQUESTS = int(sys.argv[7])
	
	print 'Starting xia-client!'
	
	INITIAL = time.time()
	
	REQ = 0
	while REQ < REQUESTS:
		try:	
			DST_GATEWAYROUTER = str(random.randint(1,GATEWAYROUTERS))
			DST_GATEWAY = str(random.randint(1,GATEWAYS))
			DST_MOTE = str(random.randint(1,MOTES))
			
			HOSTNAME = DST_MOTE+"."+DST_GATEWAY+"."+DST_GATEWAYROUTER
			
			print "Time = ", time.time()-INITIAL
			
			print "Destination: Mote = ", DST_MOTE, ". Gateway = " , DST_GATEWAY , ". GatewayRouter = ", DST_GATEWAYROUTER
			
			sock = Xsocket(XSOCK_DGRAM)		
			dag = XgetDAGbyName(HOSTNAME)
			
			#DATASIZE = random.randint(1,100)
			
			text = ''.join(random.choice(string.ascii_letters + string.digits) for _ in range(DATASIZE))
			latency = time.time() * 1000
			Xsendto(sock, text, 0, dag)
			REQ = REQ + 1
		
			print REQ, " : sending" , len(text), "bytes to socket: ",sock, " with dag ", dag,"\n","Data sent: ", text
		
			(data, sdag) = Xrecvfrom(sock, MAXLEN, 0)	
			latency = (time.time() * 1000) - latency
			Xclose(sock)
	
			print "received", len(data), "bytes from", sdag,":", data   			
			print "latency: %d ms" % latency
			
		
			if data == text:
				print "success"
				result = "success"
			elif data == "udp-timeout":
				print "udp error"
				result = "udp-error"
			else:
				print "data error"
				result = "data error"
				
			fields = [SRC_CLIENT,SRC_CLIENTROUTER,DST_MOTE,DST_GATEWAY,DST_GATEWAYROUTER,time.time()-INITIAL,"%d" % latency,result]
			
			os.chmod("/xiotvolume/clientslog.csv", 0o777)
			
			with open(r'/xiotvolume/clientslog.csv', 'a') as f:
    				writer = csv.writer(f, delimiter=';')
    				writer.writerow(fields)
    				
    			print " "
    			
    			time.sleep(1)    				
    			
		except:
			print "Xsocket error"
			fields = [SRC_CLIENT,SRC_CLIENTROUTER,'','','','','',"Xsocket error"]
			with open(r'/xiotvolume/clientslog.csv', 'a') as f:
    				writer = csv.writer(f, delimiter=';')
    				writer.writerow(fields)
main()

